<!doctype html>
<html>

<head>

	<title>Map MCMM</title>


    <style>
        body {
            background-color: #C6E0F8;
            font-family: 'Roboto', Arial, sans-serif;
        }

        #one {
            font-size: 18px;
            width: 100%;
            color: rgba(0,0,0);
            color: rgba(0,0,0, 0.90);  
        }

        #scrollbox {
            height:85px;
            width: 248px;
            overflow-x: scroll;
            border: 1px solid;
        }
    </style>


    <script type="text/javascript">                         
        var jsonString = "{{value}}";
        var getData = JSON.parse(jsonString.replace(/&quot;/g,'"'));
        var jsonData = [];   

        Object.entries(getData).forEach(
        ([key, value]) => {      
            if (value.valid_structure == "yes") {
                jsonData.push(value);                            
            }
        });
        


        function sendArray() {
            var orderedList = orderList();
            var archsChecked = whatArchitects();
            var decsChecked = whatDecades();

            if (archsChecked.length == 0) {
                alert("Please select at least one option per category");
                return;
            }

            else if (decsChecked.length == 0) {
                alert("Please select at least one option per category");
                return;
            }

            else if (orderedList.length == 0) {
                alert("No Results: Please select more options");
                return;
            }

            else {
                var w = window.open("/custom");
                w.myArray = orderedList;
            }
         
        }


        function orderList() {
            var filtered2 = narrowByDec();
            var order1 = [];
            var order2 = [];
            var order3 = [];
            var type;
            var pub = 0;
            var char = ["6", "5", "4", "3", "2", "1", "0"];
            var num = ["6", "3", "2", "5", "4", "1", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16"];

            for (i=0; i<filtered2.length; i++) {
                if (filtered2[i].building_type == "Public") { 
                    pub = pub + 1; 
                }
            }

            if (pub != 0) {
                type = ["Public", "Public and Comm/Ind", "Public and Edu", "Religious", "Religious and Edu", "Educational", "Commercial/Industrial", "Edu and Comm/Ind", "Comm/Ind and Residential", "Residential", ""];
            }

            else {
                type = ["Religious", "Religious and Edu", "Educational", "Public and Edu", "Commercial/Industrial", "Edu and Comm/Ind", "Public and Comm/Ind", "Comm/Ind and Residential", "Residential", ""];
            }


            for (var i=0; i<char.length; i++) {                     
                Object.entries(filtered2).forEach(
                ([key, value]) => {      
                    if (value.characteristics_sum == char[i]) {
                        order1.push(value);                            
                    }
                });                                              
            } 
            
            for (var i=0; i<type.length; i++) {                     
                Object.entries(order1).forEach(
                ([key, value]) => {      
                    if (value.building_type == type[i]) {
                        order2.push(value);                            
                    }
                });                                              
            }

            for (var i=0; i<num.length; i++) {                     
                Object.entries(order2).forEach(
                ([key, value]) => {      
                    if (value.neighborhood == num[i]) {
                        order3.push(value);                            
                    }
                });                                              
            }

            return order3;
        }


        function narrowByDec() { 
            var decsChecked = whatDecades();
            var filtered1 = narrowByArch();
            var filtered2 = [];


            for (var i=0; i<decsChecked.length; i++) {              
                Object.entries(filtered1).forEach(
                ([key, value]) => {      
                    if (value.decade == decsChecked[i]) {
                        filtered2.push(value);                            
                    }
                }); 
            }

            return filtered2;
        }


        function narrowByArch() {
            var archsChecked = whatArchitects();
            var filtered1 = [];            

            for (var i=0; i<archsChecked.length; i++) {                     
                Object.entries(jsonData).forEach(
                ([key, value]) => {      
                    if (value.architect == archsChecked[i]) {
                        filtered1.push(value);                            
                    }
                });                                              
            }

            return filtered1;                                  
        }     


        function archToggle(source) {
            archAll = document.getElementsByName('archBox');
            
            for(var i=0; i<archAll.length; i++) {
                archAll[i].checked = source.checked;
            }
        }

        function decToggle(source) {
            decAll = document.getElementsByName('decBox');
            
            for(var i=0; i<decAll.length; i++) {
                decAll[i].checked = source.checked;
            }
        }

        function whatArchitects() {
            var archCheckboxes = document.getElementsByName('archBox');
            var archsChecked = [];

            for (var i=0; i<archCheckboxes.length; i++) {
                if (archCheckboxes[i].checked) {
                    archsChecked.push(archCheckboxes[i].value);
                }
            }              

            return archsChecked;
        }

        function whatDecades() {
            var decCheckboxes = document.getElementsByName('decBox');
            var decsChecked = [];              

            for (var i=0; i<decCheckboxes.length; i++) {
                if (decCheckboxes[i].checked) {
                    decsChecked.push(decCheckboxes[i].value);
                }
            }
            
            return decsChecked;
        }
        
    </script>

</head>



<body>
    <h1>Welcome to Map MCM Midland</h1>
    <p>
        Explore the unique architectural heritage of Mid-Century Modern in Midland, MI. <br>
        Click the link below to view planned routes representing a great variety of MCM <br> 
        architecture in Midland, or create a custom route. 
    </p>
    <a href="/planned" target="_blank">View Planned Routes</a>
    <br>

    <div id="one">
        <form action="javascript: sendArray()"> 
            <h2>Route by Architect and Decade</h2>

            <b>Mid-Century Modern Architects</b> <br> 
            <br>

            <input type="checkbox" onClick="archToggle(this)"> Any Architect <br>
            <input type="checkbox" name="archBox" value="Dow"> Alden B. Dow <br>    
            <input type="checkbox" name="archBox" value="Warner"> Francis Warner <br>  
            <input type="checkbox" name="archBox" value="Hallett"> Jackson Hallett <br> 
            <input type="checkbox" name="archBox" value="Beach"> Glen Beach <br>      
            <input type="checkbox" name="archBox" value="Schwartz"> Robert Schwartz <br>       
            <input type="checkbox" name="archBox" value="Schulwitz"> C.G. Schulwitz <br>
            <input type="checkbox" name="archBox" value="Schwartz/Blacklock"> Schwartz and Blacklock <br>
            <input type="checkbox" name="archBox" value="" style="opacity:0; position:absolute; left:100px">

            <i> Additional Architects <br> (3 structures or less per architect) </i> 
            <div onmouseover="document.body.style.overflow='hidden';" onmouseout="document.body.style.overflow='auto';" id="scrollbox">
                <input type="checkbox" name="archBox" value="Schwartz/Beach"> Schwartz/Beach <br>
                <input type="checkbox" name="archBox" value="Hallett/Saro"> Hallett/Saro <br>
                <input type="checkbox" name="archBox" value="Goodall"> Robert Goodall <br>
                <input type="checkbox" name="archBox" value="Allison"> Cle Allison <br>
                <input type="checkbox" name="archBox" value="Goodall/Beach"> Goodall/Beach <br>
                <input type="checkbox" name="archBox" value="Schulwitz/Virgo"> Schulwitz/Virgo <br>
                <input type="checkbox" name="archBox" value="Nurmi"> S.A. Nurmi <br>
                <input type="checkbox" name="archBox" value="Cummings"> Harry Cummings <br>  
                <input type="checkbox" name="archBox" value="Wesolek"> Morris E. Wesolek <br>
                <input type="checkbox" name="archBox" value="Goddeyne"> J.C. Goddeyne <br>
                <input type="checkbox" name="archBox" value="Robertson"> James Robertson <br>
                <input type="checkbox" name="archBox" value="Perry/Feagley"> Perry/Feagley <br>
                <input type="checkbox" name="archBox" value="Hammerschmidt"> Hammerschmidt <br>
                <input type="checkbox" name="archBox" value="Spence"> James Spence <br>
                <input type="checkbox" name="archBox" value="Stone"> William Stone <br>
                <input type="checkbox" name="archBox" value="Dilloway"> Paul Dilloway <br>
                <input type="checkbox" name="archBox" value="Ebach"> Earl A. Ebach <br>
                <input type="checkbox" name="archBox" value="Boone"> Ralph Boone <br>
                <input type="checkbox" name="archBox" value="Upton"> Harvey Upton <br>
                <input type="checkbox" name="archBox" value="Tilton"> Charles Tilton <br>
                <input type="checkbox" name="archBox" value="Schwitzer"> Dan Schwitzer <br>
                <input type="checkbox" name="archBox" value="McColl"> Alexander McColl <br>
                <input type="checkbox" name="archBox" value="Freudinger"> Ed Freudinger <br>
                <input type="checkbox" name="archBox" value="Sweebe"> Larry Sweebe <br>
                <input type="checkbox" name="archBox" value="Matern"> R.A. Matern <br>    
                <input type="checkbox" name="archBox" value="Tobocman/Lawrence"> Tobocman/Lawrence <br>
            </div>
            <br>
            <b>Decade Built</b> <br> 
            <br>   

            <input type="checkbox" onClick="decToggle(this)"> Any Decade <br>
            <input type="checkbox" name="decBox" value="93"> 1930's <br>
            <input type="checkbox" name="decBox" value="94"> 1940's <br>
            <input type="checkbox" name="decBox" value="95"> 1950's <br>
            <input type="checkbox" name="decBox" value="96"> 1960's <br>
            <input type="checkbox" name="decBox" value="97"> 1970's <br>
            <input type="checkbox" name="decBox" value="98"> 1980's <br>
            <input type="checkbox" name="decBox" value="99"> 1990's <br>
            <input type="checkbox" name="decBox" value="" style="opacity:0; position:absolute; left:100px">        
            <br>

            <input type="submit" value="Submit">
            
        </form>
    </div>



</body>

</html>